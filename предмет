Смотри, всё тоже самое, только вместо apache надо использовать схему nginx+php-fpm.
location / должен отдаваться по fast-cgi пассу из fpm напрямую, location /admin смотреть в контейнер с phpmyadmin. 
Ещё подключи volume который прокинет с хостовой машины php info ( примеры можешь глянуть в гугле или уж на крайняк спросить у меня) в нужные контейнеры*
Задачка со звёздочкой на подумать, в какие контейнеры нужно будет положить php info




Эта задача предполагает настройку сервера, который работает на стеке технологий Nginx и PHP-FPM, чтобы осуществить защищенный доступ к определенной части сайта (location-Admin) через аутентификацию FastCGI прямо через PHP-FPM. 

PHP-FPM используется для обработки PHP-скриптов, в то время как FastCGI - это протокол взаимодействия между веб-сервером (в данном случае Nginx) и внешним процессом обработки (в данном случае PHP-FPM). Аутентификация FastCGI позволяет защитить доступ к определенной части сайта паролем, который будет проверяться PHP-FPM перед тем как отдать запрашиваемую информацию.

Таким образом, задача позволяет ограничить доступ к конкретной части сайта (location-Admin, где обычно находится административная панель) с помощью пароля, который будет проверяться прямо на этапе обработки запроса PHP-FPM, что дополнительно защищает данные и обеспечивает безопасность доступа к административной панели.


В контексте Docker Compose для LEMP стека (Linux, Nginx, MySQL, PHP), "location" - это директива конфигурации Nginx, которая используется для определения различных настроек и поведения для конкретных URL-адресов или путей на вашем веб-сервере.

В файле конфигурации Nginx, который используется в Docker Compose для LEMP стека, вы можете определить различные блоки "location" для обработки запросов к различным URL-адресам. Например, вы можете настроить разные правила для обработки запросов к статическим файлам, к файлам PHP, к административной части сайта и т.д.

Пример конфигурации Nginx с использованием директивы "location" в контексте Docker Compose для LEMP стека:

server {
    listen 80;
    server_name example.com;

    location / {
        root /var/www/html;
        index index.php;
    }

    location ~ .php$ {
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location /admin {
        # Настройки для административной части сайта
    }
}


В этом примере, блоки "location" определяют различное поведение для различных URL-адресов на сервере Nginx. Например, первый блок "location" обрабатывает запросы к корневому URL-адресу, второй блок обрабатывает запросы к файлам PHP, а третий блок обрабатывает запросы к URL-адресам, начинающимся с "/admin".



